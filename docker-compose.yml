# use "docker-compose build" to rebuild the image if necessary

version: "3"
services:
  # 0. start sonarqube server
  # docker-compose up sonarqube
  sonarqube:
    image: sonarqube:latest
    networks:
      - sonarqube
      - default
    ports:
      - 9000:9000

  # then: 2. run analysis (and parse coverage report from the test)
  analysis:
    # docker-compose up analysis
    image: newtmitch/sonar-scanner:latest
    volumes:
      - .:/usr/src
    networks:
      - sonarqube
    external_links:
      - sonarqube

  # runs the browser-based animation example
  # docker-compose up web-animation-lia
  web-animation-lia:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/lowest_inventory_agent/run_tilemap_web_animation.py"

  # runs the browser-based animation example
  # docker-compose up web-animation-lia-process
  web-animation-lia-process:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/lowest_inventory_agent/run_process_web_animation.py"

  # runs the training script
  # the overall number of training steps can be specified in: ./tugger_src/rl/stable_baselines/config.py
  # outputs (gitignored) stats to ./training_results/_temp_ACER_[#steps].monitor.csv
  # saves the trained agent at the end to ./training_results/_temp_ACER_[#steps].zip
  # docker-compose up acer-training
  acer-training:
    build: ./
    volumes:
      - .:/usr/src
    command: "python3 ./exec/acer/training.py"

  # show animation with the trained agent
  # loads agent from ./training_results/_temp_ACER_[#steps].zip
  # [#steps] as specified in ./tugger_src/rl/stable_baselines/config.py
  # docker-compose up acer-web-animation-tilemap
  acer-web-animation-tilemap:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/acer/run_tilemap_web_animation.py"

  # plot training performance
  # loads training history from ./training_results/_temp_ACER_[#steps].monitor.csv
  # [#steps] as specified in ./tugger_src/rl/stable_baselines/config.py
  # docker-compose up acer-plot-training
  # on mac this works: https://stackoverflow.com/questions/37826094/xt-error-cant-open-display-if-using-default-display
  acer-plot-training:
    build: ./
    volumes:
      - .:/usr/src
    environment:
      - DISPLAY=docker.for.mac.host.internal:0
    command: "python3 ./exec/acer/plot.py"

networks:
  sonarqube:
