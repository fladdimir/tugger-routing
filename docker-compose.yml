# use "docker-compose build" to rebuild the image if necessary

version: "3"
services:
  # runs the browser-based animation example
  # docker-compose up web-animation-lia
  web-animation-lia:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/lowest_inventory_agent/run_tilemap_web_animation.py"

  # runs the browser-based animation example
  # docker-compose up web-animation-lia-process
  web-animation-lia-process:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/lowest_inventory_agent/run_process_web_animation.py"

  # runs the training script
  # the overall number of training steps can be specified in: ./tugger_src/rl/stable_baselines/config.py
  # outputs (gitignored) stats to ./training_results/_temp_ppo_[#steps].monitor.csv
  # saves the trained agent at the end to ./training_results/_temp_ppo_[#steps].zip
  # docker-compose up ppo-training
  ppo-training:
    build: ./
    volumes:
      - .:/usr/src
    command: "python3 ./exec/ppo/training.py"

  # show animation with the trained agent
  # loads agent from ./training_results/_temp_ppo_[#steps].zip
  # [#steps] as specified in ./tugger_src/rl/stable_baselines/config.py
  # docker-compose up ppo-web-animation-tilemap
  ppo-web-animation-tilemap:
    build: ./
    volumes:
      - .:/usr/src
    ports:
      - "5000:5000"
    command: "python3 ./exec/ppo/run_tilemap_web_animation.py"
